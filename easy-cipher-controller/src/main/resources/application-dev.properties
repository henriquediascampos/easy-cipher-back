server.port=8080

spring.datasource.url=jdbc:postgresql://localhost:5432/easy-cipher
spring.datasource.username=postgres
spring.datasource.password=xxxx

origin-client=http://localhost:4200/


#RestTamplate
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG
logging.level.org.apache.http=DEBUG
logging.level.httpclient.wire=DEBUG
logging.level.web=DEBUG
logging.level.org.apache.httpclient=DEBUG


spring.thymeleaf.cache=false
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000

spring.security.oauth2.client.registration.login-client-oidc.provider=spring
spring.security.oauth2.client.registration.login-client-oidc.client-id=clientid
spring.security.oauth2.client.registration.login-client-oidc.client-secret=clientsecret
spring.security.oauth2.client.registration.login-client-oidc.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.login-client-oidc.redirect-uri=http://localhost:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.login-client-oidc.scope=ADMIN,USER
spring.security.oauth2.client.registration.login-client-oidc.client-name=login-client-oidc

spring.security.oauth2.client.registration.login-client-authorization-code.provider=spring
spring.security.oauth2.client.registration.login-client-authorization-code.client-id= clientid
spring.security.oauth2.client.registration.login-client-authorization-code.client-secret=clientsecret
spring.security.oauth2.client.registration.login-client-authorization-code.authorization-grant-type=authorization_code
# spring.security.oauth2.client.registration.login-client-authorization-code.redirect-uri=http://127.0.0.1:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.login-client-authorization-code.scope=ADMIN,USER
spring.security.oauth2.client.registration.login-client-authorization-code.client-name=login-client-authorization-code

spring.security.oauth2.client.registration.login-client-client-credentials.provider=spring
spring.security.oauth2.client.registration.login-client-client-credentials.client-id=clientid
spring.security.oauth2.client.registration.login-client-client-credentials.client-secret=clientsecret
spring.security.oauth2.client.registration.login-client-client-credentials.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.login-client-client-credentials.scope=ADMIN,USER
spring.security.oauth2.client.registration.login-client-client-credentials.client-name=login-client-client-credentials


spring.security.oauth2.client.provider.spring.issuer-uri=http://localhost:9000

spring.security.oauth2.client.provider.spring.authorization-uri=http://localhost:9000/oauth2/authorize
spring.security.oauth2.client.provider.spring.token-uri=http://localhost:9000/oauth2/token
spring.security.oauth2.client.provider.spring.jwk-set-uri=http://localhost:9000/oauth2/jwks
spring.security.oauth2.client.provider.spring.user-info-uri=http://localhost:9000/user/teste

# messages:
#   base-uri: http://127.0.0.1:8090/messages
